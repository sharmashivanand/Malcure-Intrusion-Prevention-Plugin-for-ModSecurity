# ███████████████████████████████████████████████████████████████████████████████
# ████████████ Malcure's Intrusion Prevention Plugin for ModSecurity ████████████
# ████████████████████████ Copyright(C) 2024 Malcure.Com ████████████████████████
# ███████████████████████████████████████████████████████████████████████████████
# █████                                                                    ██████
# █████                     © Copyright 2024 MalCure                       ██████
# █████                     Author —                                       ██████
# █████                     Shiv / shiv@malcure.com                        ██████
# █████                                                                    ██████
# ███████████████████████████████████████████████████████████████████████████████
# ███████████████████████████████████████████████████████████████████████████████
# ███████████████████████████████████████████████████████████████████████████████

# LICENSE: MIT
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Plugin name: malcure-intrusion-prevention-plugin
# Plugin description: Proactively blocks malicious IPs to prevent brute-force attacks and exploitation attempts by monitoring error responses in ModSecurity without relying on external tools like Fail2Ban etc.
# Rule ID block base: 9,600,000 - 9,600,999
# Plugin version: 1.0.0

# ================================================================================
# Exempt private IPs
# {Useful because WordPress Cron, PageSpeed Module etc. make local requests which can result in 404 etc.}
# This rule matches requests coming from private/internal IP addresses.
# If the REMOTE_ADDR matches the regex for private IP ranges, the rule triggers.
# Action 'ctl:ruleRemoveById=9600010-9600100' removes the specified rules for this transaction,
# effectively exempting these IPs from the intrusion prevention logic.
SecRule REMOTE_ADDR "@rx ^(?:127|10|192\.168|172\.(?:1[6-9]|2[0-9]|3[0-1]))\." \
    "id:9600002,\
    phase:1,\
    log,\
    ctl:ruleRemoveById=9600010-9600999,\
    msg:'malcure_intrusion_prevention: 9600002 Exempting %{REMOTE_ADDR}'"

# ================================================================================
# Configure / Initialize variables
# By default, we reset counting every 30 seconds.
# By default, we ignore the first 5 errors. The blocking triggers on the 6th error.
# The blocking remains in place until the IP stops causing errors AND the counter expires.
# 1. tx.error_counter_expire_period - Error Tracking Period (in seconds)
# 2. tx.error_limit - Error Limit (number of errors before blocking)
# This action initializes the variables used for error tracking and blocking.
# - 'tx.error_counter_expire_period' is set to 30 seconds.
# - 'tx.error_limit' is set to 5, so blocking occurs after more than 5 errors.
# This action runs in phase 1 to ensure variables are set early.
SecAction \
    "id:9600010,\
    phase:1,\
    log,\
    ver:'malcure-intrusion-prevention-plugin/1.0.0',\
    setvar:tx.error_counter_expire_period=30,\
    setvar:tx.error_limit=5"


# If required, act on expiry at the earliest
# This chained rule checks if the error counter expiry time has passed.
# Condition:
# - If 'ip.ec_expiry' (expiry time) is less than the current time '%{TIME_EPOCH}'.
# Actions:
# - Unset 'ip.error_counter' and 'ip.block_ip' to reset tracking for the IP.
# The chain ensures this only executes if 'ip.block_ip' is greater than or equal to 1,
# meaning the IP was previously blocked.
SecRule ip.ec_expiry "@lt %{TIME_EPOCH}" \
    "id:9600015,\
    phase:2,\
    log,\
    setvar:!ip.error_counter,\
    setvar:!ip.block_ip,\
    msg:'malcure_intrusion_prevention: 9600015 Unsetting ip.error_counter, ip.block_ip for %{REMOTE_ADDR}',\
    chain"
        SecRule ip.block_ip "@ge 1"

# Track the number of errors
# This rule increments the error counter when a 403 or 404 response is detected.
# Actions:
# - 'setvar:'ip.error_counter=+1'' increments the error counter for the IP.
# - 'setvar:'ip.ec_expiry=%{TIME_EPOCH}'' sets 'ip.ec_expiry' to the current time.
# - 'setvar:'ip.ec_expiry=+%{tx.error_counter_expire_period}'' adds the error counter expire period to 'ip.ec_expiry'.
# This effectively updates the expiry time each time an error is encountered.
SecRule RESPONSE_STATUS "@within 403,404" \
    "id:9600030,\
    phase:3,\
    log,\
    setvar:'ip.error_counter=+1',\
    setvar:'ip.ec_expiry=%{TIME_EPOCH}',\
    setvar:'ip.ec_expiry=+%{tx.error_counter_expire_period}',\
    msg:'malcure_intrusion_prevention: 9600030 Detected response status %{RESPONSE_STATUS} from %{REMOTE_ADDR}. Incremented ip.error_counter=%{ip.error_counter}. Set ip.ec_expiry=%{ip.ec_expiry} {TIME_EPOCH} was %{TIME_EPOCH}.'"

# Set block flag if required
# This rule checks if the 'ip.error_counter' exceeds the 'tx.error_limit'.
# Condition:
# - If 'ip.error_counter' is greater than 'tx.error_limit' (e.g., more than 5 errors).
# Actions:
# - Sets 'ip.block_ip' to 1, indicating that the IP should be blocked.
# This rule runs in phase 3, after the error counter has been incremented.
SecRule ip.error_counter "@gt %{tx.error_limit}" \
    "id:9600040,\
    phase:3,\
    log,\
    msg:'malcure_intrusion_prevention: 9600040 Setting block flag for IP %{REMOTE_ADDR} at %{ip.error_counter} errors. ip.ec_expiry=%{ip.ec_expiry}, TIME_EPOCH=%{TIME_EPOCH}',\
    setvar:ip.block_ip=1"

# Block if required
# This rule denies access to IPs that have been marked for blocking.
# Condition:
# - If 'ip.block_ip' is greater than or equal to 1.
# Actions:
# - 'deny' action blocks the request.
# - Logs the event with details about the IP and error counter.
# This rule also runs in phase 3 to promptly block malicious requests.
SecRule ip.block_ip "@ge 1" \
    "id:9600050,\
    phase:3,\
    deny,\
    log,\
    msg:'malcure_intrusion_prevention: 9600050 Blocking IP %{REMOTE_ADDR} at %{ip.error_counter} errors. ip.ec_expiry=%{ip.ec_expiry}, TIME_EPOCH=%{TIME_EPOCH}'"

# The 'SecMarker' directive defines a marker in the ruleset.
# It can be used with actions like 'skipAfter' to control rule flow.
# In this case, it marks the end of the Malcure Intrusion Prevention Plugin rules.
SecMarker "END-MALCURE-INTRUSTION-PREVENTION-9600000"

# ███████████████████████████████████████████████████████████████████████████████
# ████████████ Malcure's Intrusion Prevention Plugin for ModSecurity ████████████
# ████████████████████████ Copyright(C) 2024 Malcure.Com ████████████████████████
# ███████████████████████████████████████████████████████████████████████████████
# █████                                                                    ██████
# █████                     © Copyright 2024 MalCure                       ██████
# █████                     Author —                                       ██████
# █████                     Shiv / shiv@malcure.com                        ██████
# █████                                                                    ██████
# ███████████████████████████████████████████████████████████████████████████████
# ███████████████████████████████████████████████████████████████████████████████
# ███████████████████████████████████████████████████████████████████████████████